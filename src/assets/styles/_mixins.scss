// Global SCSS Mixins for Finley PWA
// Reusable mixins for common patterns and responsive design

// === RESPONSIVE BREAKPOINTS ===
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: #{$breakpoint-xs}) { @content; }
  }
  @if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) { @content; }
  }
  @if $breakpoint == xxl {
    @media (min-width: #{$breakpoint-xxl}) { @content; }
  }
}

@mixin respond-below($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
  }
  @if $breakpoint == md {
    @media (max-width: #{$breakpoint-md - 1px}) { @content; }
  }
  @if $breakpoint == lg {
    @media (max-width: #{$breakpoint-lg - 1px}) { @content; }
  }
  @if $breakpoint == xl {
    @media (max-width: #{$breakpoint-xl - 1px}) { @content; }
  }
  @if $breakpoint == xxl {
    @media (max-width: #{$breakpoint-xxl - 1px}) { @content; }
  }
}

// === FLEXBOX UTILITIES ===
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-column;
  align-items: center;
  justify-content: center;
}

// === POSITIONING ===
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin fixed-cover {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// === TYPOGRAPHY ===
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// === BUTTONS ===
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $button-padding-y $button-padding-x;
  border: none;
  border-radius: $button-border-radius;
  font-weight: $button-font-weight;
  text-decoration: none;
  cursor: pointer;
  transition: $transition-all;
  user-select: none;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($primary-blue, 0.25);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-variant($bg-color, $text-color: $white, $hover-bg: darken($bg-color, 10%)) {
  @include button-base;
  background-color: $bg-color;
  color: $text-color;

  &:hover:not(:disabled) {
    background-color: $hover-bg;
    transform: translateY(-1px);
  }

  &:active {
    transform: translateY(0);
  }
}

// === CARDS ===
@mixin card-base {
  background: $white;
  border-radius: $card-border-radius;
  box-shadow: $card-shadow;
  padding: $card-padding;
  transition: $transition-all;
}

@mixin card-hover {
  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }
}

// === ANIMATIONS ===
@mixin fade-in($duration: 0.3s) {
  animation: fadeIn $duration ease forwards;
}

@mixin slide-in-up($duration: 0.3s) {
  animation: slideInUp $duration ease forwards;
}

@mixin slide-in-left($duration: 0.6s) {
  animation: slideInFromLeft $duration cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}

@mixin slide-in-right($duration: 0.6s) {
  animation: slideInFromRight $duration cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}

// === VIDEO COMPONENTS ===
@mixin video-overlay {
  @include absolute-cover;
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.1) 0%,
    rgba(0, 0, 0, 0.3) 50%,
    rgba(0, 0, 0, 0.7) 100%
  );
  z-index: 2;
}

@mixin video-background {
  @include absolute-cover;
  object-fit: cover;
  z-index: 1;
}

// === FORM ELEMENTS ===
@mixin input-base {
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  border: 1px solid $input-border-color;
  border-radius: $input-border-radius;
  font-size: $font-size-base;
  transition: $transition-colors;

  &:focus {
    outline: none;
    border-color: $input-focus-border-color;
    box-shadow: 0 0 0 3px rgba($input-focus-border-color, 0.1);
  }

  &::placeholder {
    color: $gray-500;
  }
}

// === LOADING STATES ===
@mixin loading-spinner($size: 20px, $color: $primary-blue) {
  width: $size;
  height: $size;
  border: 2px solid rgba($color, 0.2);
  border-top: 2px solid $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

// === THEME UTILITIES ===
@mixin theme-dark {
  .theme-dark & {
    @content;
  }
}

@mixin theme-light {
  .theme-light & {
    @content;
  }
}

// === TOUCH TARGETS ===
@mixin touch-target($size: 44px) {
  min-width: $size;
  min-height: $size;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

// === GLASS MORPHISM ===
@mixin glass-morphism($opacity: 0.1) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

// === SCROLLBAR STYLING ===
@mixin custom-scrollbar($width: 8px, $track-color: $gray-200, $thumb-color: $gray-400) {
  &::-webkit-scrollbar {
    width: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $width / 2;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;

    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}

// === ASPECT RATIO ===
@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;
  
  &::before {
    content: '';
    display: block;
    padding-top: percentage($height / $width);
  }
  
  > * {
    @include absolute-cover;
  }
}

// === KEYFRAME ANIMATIONS ===
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInFromLeft {
  0% {
    transform: translateX(-40px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInFromRight {
  0% {
    transform: translateX(40px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
